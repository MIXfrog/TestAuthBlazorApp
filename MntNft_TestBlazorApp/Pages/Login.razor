@page "/signin"
@inject HttpClient HttpClient
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations;
@using MntNft_TestBlazorApp.Services;

<h3>Log in</h3>

<EditForm Model="@signinModel" OnValidSubmit="@SignIn">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <label for="Login">Login</Label>
    <InputText id="Login" @bind-Value="signinModel.Login" />
    <label for="Password">Password</Label>
    <InputText id="Password" @bind-Value="signinModel.Password" type="password" />

    <button type="submit" class="btn btn-primary" style="margin-top: 10px; width:80px">Sign In</button>
    @if (!string.IsNullOrEmpty(error))
    {
        <div class="alert alert-danger mt-3 mb-0">@error</div>
    }
</EditForm>

@code {

    private SigninModel signinModel = new();
    private string error;

    protected override void OnInitialized()
    {
        if (AuthService.User != null)
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task SignIn()
    {
        try
        {
            // getting auth token
            await AuthService.Login(signinModel.Login, signinModel.Password);
            if (AuthService.User != null)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                error = "User not found";
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
            StateHasChanged();
        }
    }

    public class SigninModel
    {
        [Required]
        public string? Login { get; set; }

        [Required]
        [MinLength(6, ErrorMessage = "Password must contain at least 6 characters")]
        public string? Password { get; set; }
    }
}